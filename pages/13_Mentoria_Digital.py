import streamlit as st
import pandas as pd
import os
import json
from datetime import datetime
from dotenv import load_dotenv
import anthropic

# Carregar vari√°veis de ambiente
load_dotenv()
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY")

st.set_page_config(page_title="Mentoria Digital",
                   page_icon="üë®‚Äçüè´", layout="wide")
st.title("üë®‚Äçüè´ Mentoria Digital - Company Culture Developer")
st.markdown(
    "Desenvolva sua cultura empresarial com mentores especializados em diferentes √°reas.")

# --- Base de Conhecimento dos Mentores ---
MENTORES_DATA = {
    "Elon Musk": {
        "perfil": "Inova√ß√£o e Criatividade",
        "descricao": "Especialista em inova√ß√£o disruptiva, empreendedorismo e vis√£o futurista.",
        "areas": ["Inova√ß√£o", "Tecnologia", "Empreendedorismo", "Vis√£o de Futuro"],
        "estilo": "Direto, desafiador e focado em resultados extraordin√°rios."
    },
    "Silvio Santos": {
        "perfil": "Lideran√ßa e Neg√≥cios",
        "descricao": "Especialista em comunica√ß√£o, entretenimento e constru√ß√£o de imp√©rios empresariais.",
        "areas": ["Lideran√ßa", "Comunica√ß√£o", "Neg√≥cios", "Empreendedorismo"],
        "estilo": "Pr√°tico, comunicativo e focado em conex√£o com pessoas."
    },
    "Bill Gates": {
        "perfil": "Tecnologia e Estrat√©gia",
        "descricao": "Especialista em tecnologia, filantropia e estrat√©gia de longo prazo.",
        "areas": ["Tecnologia", "Estrat√©gia", "Filantropia", "Inova√ß√£o Social"],
        "estilo": "Anal√≠tico, estrat√©gico e focado em impacto global."
    },
    "Steve Jobs": {
        "perfil": "Design e Excel√™ncia",
        "descricao": "Especialista em design, experi√™ncia do usu√°rio e excel√™ncia executiva.",
        "areas": ["Design", "Experi√™ncia do Usu√°rio", "Excel√™ncia", "Inova√ß√£o"],
        "estilo": "Perfeccionista, vision√°rio e focado em detalhes."
    }
}

# --- Perfis de Especialistas ---
ESPECIALISTAS = {
    "Psic√≥logo": {
        "descricao": "Especialista em desenvolvimento pessoal e bem-estar psicol√≥gico.",
        "areas": ["Desenvolvimento Pessoal", "Sa√∫de Mental", "Autoconhecimento", "Equil√≠brio Emocional"]
    },
    "Gestor de Pessoas": {
        "descricao": "Especialista em gest√£o de pessoas, desenvolvimento de talentos e cultura organizacional.",
        "areas": ["Gest√£o de Pessoas", "Desenvolvimento de Talentos", "Cultura Organizacional", "Lideran√ßa"]
    },
    "Lideran√ßa": {
        "descricao": "Especialista em lideran√ßa, motiva√ß√£o de equipes e tomada de decis√£o.",
        "areas": ["Lideran√ßa", "Motiva√ß√£o", "Tomada de Decis√£o", "Gest√£o de Equipes"]
    },
    "Psicanalista": {
        "descricao": "Especialista em compreens√£o do comportamento humano e din√¢micas inconscientes.",
        "areas": ["Comportamento Humano", "Din√¢micas Inconscientes", "Autoconhecimento Profundo", "Relacionamentos"]
    },
    "M√©dico": {
        "descricao": "Especialista em sa√∫de integral, bem-estar f√≠sico e preven√ß√£o de burnout.",
        "areas": ["Sa√∫de Integral", "Bem-estar F√≠sico", "Preven√ß√£o de Burnout", "Qualidade de Vida"]
    },
    "Nutricionista": {
        "descricao": "Especialista em nutri√ß√£o, h√°bitos saud√°veis e performance atrav√©s da alimenta√ß√£o.",
        "areas": ["Nutri√ß√£o", "H√°bitos Saud√°veis", "Performance", "Energia"]
    },
    "Tecnologia": {
        "descricao": "Especialista em transforma√ß√£o digital, automa√ß√£o e inova√ß√£o tecnol√≥gica.",
        "areas": ["Transforma√ß√£o Digital", "Automa√ß√£o", "Inova√ß√£o Tecnol√≥gica", "Efici√™ncia"]
    },
    "Financeiro": {
        "descricao": "Especialista em gest√£o financeira, planejamento estrat√©gico e otimiza√ß√£o de recursos.",
        "areas": ["Gest√£o Financeira", "Planejamento Estrat√©gico", "Otimiza√ß√£o de Recursos", "Investimentos"]
    },
    "Inova√ß√£o e Criatividade": {
        "descricao": "Especialista em fomentar a criatividade, resolver problemas inovadores e pensar fora da caixa.",
        "areas": ["Criatividade", "Inova√ß√£o", "Resolu√ß√£o de Problemas", "Pensamento Criativo"]
    }
}

# --- Fun√ß√µes ---

@st.cache_data
def carregar_agentes():
    AGENT_DIR = "data/agents"
    if not os.path.exists(AGENT_DIR):
        return pd.DataFrame()

    agent_files = [f for f in os.listdir(AGENT_DIR) if f.endswith('.json')]
    if not agent_files:
        return pd.DataFrame()

    all_agents_data = []
    for f in agent_files:
        with open(os.path.join(AGENT_DIR, f), 'r', encoding='utf-8') as file:
            all_agents_data.append(json.load(file))

    df = pd.json_normalize(all_agents_data)
    return df.set_index('id_funcionario')


def get_mentor_response(prompt, mentor_name, funcionario_context):
    """Gera resposta usando Claude AI com perfil do mentor selecionado"""
    if not ANTHROPIC_API_KEY:
        return "‚ùå Erro: ANTHROPIC_API_KEY n√£o configurada. Configure no arquivo .env"

    try:
        client = anthropic.Anthropic(api_key=ANTHROPIC_API_KEY)
        
        # Obter dados do mentor
        mentor_data = MENTORES_DATA.get(mentor_name, {})
        especialista_data = ESPECIALISTAS.get(mentor_name, {})
        
        # Construir contexto do mentor
        if mentor_data:
            perfil_mentor = f"""
            PERFIL DO MENTOR: {mentor_name}
            √Åreas de especialidade: {', '.join(mentor_data.get('areas', []))}
            Estilo de mentoria: {mentor_data.get('estilo', 'N√£o definido')}
            Descri√ß√£o: {mentor_data.get('descricao', 'N√£o definido')}
            """
        elif especialista_data:
            perfil_mentor = f"""
            PERFIL DO ESPECIALISTA: {mentor_name}
            √Åreas de especialidade: {', '.join(especialista_data.get('areas', []))}
            Descri√ß√£o: {especialista_data.get('descricao', 'N√£o definido')}
            """
        else:
            perfil_mentor = f"MENTOR: {mentor_name}"

        # Construir contexto do funcion√°rio
        perfil_funcionario = f"""
        PERFIL DO FUNCION√ÅRIO:
        Nome: {funcionario_context.get('nome', 'N/A')}
        Cargo: {funcionario_context.get('cargo', 'N/A')}
        Departamento: {funcionario_context.get('departamento', 'N/A')}
        Tempo na empresa: {funcionario_context.get('tempo_de_casa_meses', 0)} meses
        
        PERSONALIDADE (Big Five - escala 1-10):
        - Abertura: {funcionario_context.get('perfil_big_five', {}).get('abertura_a_experiencia', 'N/A')}
        - Conscienciosidade: {funcionario_context.get('perfil_big_five', {}).get('conscienciosidade', 'N/A')}
        - Extrovers√£o: {funcionario_context.get('perfil_big_five', {}).get('extroversao', 'N/A')}
        - Amabilidade: {funcionario_context.get('perfil_big_five', {}).get('amabilidade', 'N/A')}
        - Neuroticismo: {funcionario_context.get('perfil_big_five', {}).get('neuroticismo', 'N/A')}
        
        COMPET√äNCIAS: {', '.join(funcionario_context.get('competencias', []))}
        
        OBJETIVOS: {funcionario_context.get('objetivos_carreira', 'N√£o definido')}
        """

        system_prompt = f"""
        Voc√™ √© {mentor_name}, um mentor especializado em {perfil_mentor.split('√Åreas de especialidade:')[0].split(':')[-1].strip()}.
        
        PERFIL DO MENTOR:
        {perfil_mentor}
        
        MISS√ÉO: Fornecer orienta√ß√£o personalizada baseada em sua expertise e experi√™ncia √∫nica.
        
        ESTILO DE COMUNICA√á√ÉO:
        - Use insights relevantes da √°rea de especialidade do mentor
        - Seja emp√°tico mas direto
        - Fa√ßa perguntas reflexivas
        - Sugira a√ß√µes concretas
        - Use linguagem simples e acess√≠vel
        - Fale em tom de amizade, sempre dando boas-vindas para a pessoa
        - Use emojis para deixar a conversa mais leve e amig√°vel
        
        CONTEXTO DO FUNCION√ÅRIO:
        {perfil_funcionario}
        
        Responda sempre considerando:
        1. O perfil e estilo do mentor selecionado
        2. O momento de carreira do funcion√°rio
        3. As √°reas de especialidade relevantes
        4. A√ß√µes pr√°ticas e mensur√°veis
        """

        message = client.messages.create(
            model="claude-3-5-sonnet-20241022",
            max_tokens=1000,
            system=system_prompt,
            messages=[{
                "role": "user",
                "content": prompt
            }]
        )

        return message.content[0].text

    except Exception as e:
        return f"‚ùå Erro ao conectar com Claude: {str(e)}"


# --- Interface Principal ---
st.sidebar.header("üîß Configura√ß√µes")

# Carregar dados dos agentes
df_agentes = carregar_agentes()

if df_agentes.empty:
    st.warning(
        "‚ö†Ô∏è Nenhum agente encontrado. Execute o script generate_agents.py primeiro.")
    st.stop()

# Sele√ß√£o do funcion√°rio
id_selecionado = st.sidebar.selectbox(
    "üë§ Funcion√°rio:",
    options=df_agentes.index.tolist(),
    format_func=lambda x: f"{df_agentes.loc[x, 'nome']} ({df_agentes.loc[x, 'cargo']})"
)

agente_atual = df_agentes.loc[id_selecionado].to_dict()

# --- Interface de Sele√ß√£o de Mentores ---
st.subheader("üéØ Escolha seu Mentor")

# Tabs para diferentes categorias de mentores
tab1, tab2 = st.tabs(["üåü Mentores Celebridades", "üß† Especialistas"])

with tab1:
    st.markdown("### üåü Mentores Baseados em Celebridades")
    st.info("Selecione um mentor inspirador baseado em figuras p√∫blicas conhecidas por sua expertise.")
    
    # Grid de mentores
    cols = st.columns(2)
    mentores_celebridades = ["Elon Musk", "Silvio Santos", "Bill Gates", "Steve Jobs"]
    
    for i, mentor in enumerate(mentores_celebridades):
        with cols[i % 2]:
            mentor_data = MENTORES_DATA[mentor]
            st.markdown(f"#### {mentor}")
            st.markdown(f"**Perfil:** {mentor_data['perfil']}")
            st.markdown(f"*{mentor_data['descricao']}*")
            
            if st.button(f"Selecionar {mentor}", key=f"mentor_{mentor}"):
                st.session_state.mentor_selecionado = mentor
                st.session_state.tipo_mentor = "celebridade"
            
            st.markdown("---")

with tab2:
    st.markdown("### üß† Especialistas em √Åreas do Conhecimento")
    st.info("Selecione um especialista em √°reas espec√≠ficas para orienta√ß√£o t√©cnica.")
    
    # Grid de especialistas
    especialistas_lista = list(ESPECIALISTAS.keys())
    cols = st.columns(2)
    
    for i, especialista in enumerate(especialistas_lista):
        with cols[i % 2]:
            especialista_data = ESPECIALISTAS[especialista]
            st.markdown(f"#### {especialista}")
            st.markdown(f"*{especialista_data['descricao']}*")
            st.markdown(f"**√Åreas:** {', '.join(especialista_data['areas'][:3])}")
            
            if st.button(f"Selecionar {especialista}", key=f"especialista_{especialista}"):
                st.session_state.mentor_selecionado = especialista
                st.session_state.tipo_mentor = "especialista"
            
            st.markdown("---")

# Mostrar mentor selecionado
if 'mentor_selecionado' in st.session_state:
    mentor_atual = st.session_state.mentor_selecionado
    tipo_mentor = st.session_state.tipo_mentor
    
    st.divider()
    st.subheader(f"üë®‚Äçüè´ Seu Mentor: {mentor_atual}")
    
    if tipo_mentor == "celebridade":
        mentor_info = MENTORES_DATA[mentor_atual]
        st.info(f"**Perfil:** {mentor_info['perfil']}")
        st.info(f"**Especialidade:** {', '.join(mentor_info['areas'])}")
    else:
        especialista_info = ESPECIALISTAS[mentor_atual]
        st.info(f"**Especialidade:** {especialista_info['descricao']}")
    
    # Sugest√µes de perguntas
    st.markdown("### üí≠ Sugest√µes de perguntas:")
    sugestoes = [
        f"Como posso desenvolver minhas habilidades como {mentor_atual}?",
        f"Quais s√£o os princ√≠pios fundamentais que guiam seu trabalho?",
        f"Como lidar com fracassos e aprender com eles?",
        f"Qual conselho voc√™ daria para algu√©m come√ßando na √°rea de {mentor_info.get('perfil', 'seu setor') if tipo_mentor == 'celebridade' else mentor_atual}?",
        f"Como equilibrar vida pessoal e profissional?"
    ]
    
    for i, sugestao in enumerate(sugestoes):
        if st.button(f"üí° {sugestao}", key=f"sugestao_{i}"):
            st.session_state.conversa_input = sugestao
    
    # Input de conversa
    conversa = st.text_area(
        "‚úçÔ∏è Sua mensagem:",
        height=150,
        value=st.session_state.get('conversa_input', ''),
        placeholder=f"Exemplo: Ol√° {mentor_atual}, gostaria de orienta√ß√£o sobre..."
    )
    
    # Bot√£o de envio
    if st.button("üöÄ Conversar com seu Mentor", type="primary"):
        if not conversa.strip():
            st.warning("‚ö†Ô∏è Por favor, escreva uma mensagem.")
        else:
            with st.spinner(f"üß† {mentor_atual} est√° preparando uma resposta personalizada..."):
                resposta = get_mentor_response(conversa, mentor_atual, agente_atual)
                
                st.divider()
                st.subheader(f"üéØ Resposta de {mentor_atual}:")
                st.success(resposta)
                
                # Feedback sobre a resposta
                st.divider()
                col1, col2, col3 = st.columns(3)
                with col1:
                    if st.button("üëç √ötil"):
                        st.success("Obrigado pelo feedback!")
                with col2:
                    if st.button("üëé N√£o √∫til"):
                        st.info("Obrigado! Vamos melhorar.")
                with col3:
                    if st.button("üîÑ Nova resposta"):
                        st.experimental_rerun()

# --- Informa√ß√µes Adicionais ---
st.divider()
st.subheader("üìö Sobre a Mentoria Digital")

with st.expander("‚ÑπÔ∏è Como funciona a Mentoria Digital", expanded=False):
    st.markdown("""
    ### üéØ Objetivo
    A Mentoria Digital tem como objetivo desenvolver a cultura empresarial atrav√©s de agentes que observam os valores, cultura e cren√ßas dos l√≠deres e replicam modelos de comportamento organizacional.
    
    ### üë• Tipos de Mentores
    
    **Mentores Celebridades:**
    - Inspiradores baseados em figuras p√∫blicas reconhecidas
    - Estilos de lideran√ßa e vis√µes √∫nicas
    - Experi√™ncias reais de sucesso e inova√ß√£o
    
    **Especialistas:**
    - Profissionais com expertise em √°reas espec√≠ficas
    - Conhecimento t√©cnico e cient√≠fico atualizado
    - Orienta√ß√£o direcionada para necessidades espec√≠ficas
    
    ### üöÄ Benef√≠cios
    
    **Para o Funcion√°rio:**
    - Desenvolvimento pessoal e profissional
    - Orienta√ß√£o personalizada baseada em ci√™ncia
    - Acesso a conhecimentos de especialistas
    - Crescimento de carreira acelerado
    
    **Para a Empresa:**
    - Desenvolvimento de cultura empresarial forte
    - Reten√ß√£o de talentos
    - Aumento de engajamento
    - Melhoria de performance coletiva
    """)

# --- Footer ---
st.divider()
st.markdown("""
<div style='text-align: center; color: #666; font-size: 0.9em;'>
üë®‚Äçüè´ <strong>Mentoria Digital</strong> - HumaniQ AI<br>
Desenvolvimento de cultura empresarial atrav√©s de mentoria inteligente
</div>
""", unsafe_allow_html=True)